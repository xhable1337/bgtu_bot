"""app/handlers/admin.py

    –•—ç–Ω–¥–ª–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–æ–≤.
"""
from datetime import datetime

from app.properties import MONGODB_URI
from app.utils.api_worker import APIWorker
from app.utils.db_worker import DBWorker

db = DBWorker(MONGODB_URI)
api = APIWorker()


async def update_groups():
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø –≤ –ë–î.

    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç:
        str: —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ
    """
    text = "‚öô <b><u>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ...</u></b>\n"
    for year in db.years():
        groups_count = 0
        for faculty in db.faculties():
            # TODO: –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å 4-—Ö –∑–Ω–∞—á–Ω—ã–º–∏ –≥–æ–¥–∞–º–∏
            groups = api.groups(faculty["full"], str(year)[2:4])
            db.add_groups(faculty["full"], str(year), groups, replace=True)
            groups_count += len(groups)

        text += f"‚úÖ <b>{year} –≥–æ–¥ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:</b> {groups_count} –≥—Ä—É–ø–ø\n"
        yield text


async def update_schedule():
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø –≤ –ë–î.

    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç:
        str: —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ
    """
    text = '‚öô <b><u>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</u></b>...\n\n'

    for year in db.years():
        groups_count = 0
        for faculty in db.faculties():
            error_groups = []
            error_text = ''

            groups = db.groups(faculty=faculty["full"], year=str(year))

            # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –≤ –ë–î
            for group in groups:
                try:
                    schedule = api.schedule(group)
                    db.add_schedule(schedule)
                except Exception as e:
                    # TODO: —Å—É–∑–∏—Ç—å –∫—Ä—É–≥ –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
                    error_groups.append(group)

            # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –≥—Ä—É–ø–ø–∞–º–∏, –ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ —É–¥–∞–ª—Å—è
            if error_groups:
                error_text = ','.join(error_groups)
                error_text = f"\n<blockquote>{error_text}</blockquote>"
            error_count = len(error_groups)
            success_count = len(groups) - error_count
            dt = datetime.now().strftime('%H:%M:%S')

            text += (
                f"üéì <b>{faculty['short']}-{year}:</b>\n"
                f"‚úÖ {success_count} | ‚ùå {error_count} | üìÜ {dt}"
                f"{error_text}\n\n"
            )

            yield text


async def update_data():
    raise NotImplementedError()


async def update_teachers():
    raise NotImplementedError()
