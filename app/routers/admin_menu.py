"""app/routers/admin_menu.py

–†–æ—É—Ç–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–º–µ–Ω—é.
"""

from html import escape

from aiogram import F, Router
from aiogram.types import CallbackQuery

from app.filters import IsAdminFilter
from app.keyboards import kb_admin, kb_admin_back
from app.properties import MONGODB_URI
from app.utils.api_worker import APIWorker
from app.utils.db_worker import DBWorker
from app.utils.schedule_management import update_schedule

# –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä
admin_menu_router = Router()

# –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–æ –≤—Å–µ–º —Ö—ç–Ω–¥–ª–µ—Ä–∞–º –≤ —ç—Ç–æ–º —Ä–æ—É—Ç–µ—Ä–µ
admin_menu_router.callback_query.filter(IsAdminFilter())

db = DBWorker(MONGODB_URI)
api = APIWorker()


@admin_menu_router.callback_query(F.data.startswith("force-update-"))
async def cb_force_update(call: CallbackQuery):
    """### [`Callback`] –ö–Ω–æ–ø–∫–∏ –¥–∞/–Ω–µ—Ç –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."""
    await call.answer()

    choice = str(call.data).split("-")[2]
    text = ""
    if choice == "no":
        await call.message.edit_text("–•–æ—Ä–æ—à–æ, –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
    else:
        text = "‚öô –ó–∞–ø—É—â–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...\n\n"

        msg = await call.bot.send_message(
            call.message.chat.id, text=text, parse_mode="HTML"
        )

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
        async for updated_text in update_schedule():
            await msg.edit_text(updated_text)

        await call.message.answer("‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


@admin_menu_router.callback_query(F.data == "user_list")
async def cb_user_list(call: CallbackQuery):
    """### [`Callback`] –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    count = db._users.count_documents({})
    text = f"<u>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ (–≤—Å–µ–≥–æ {count}):</u>\n\n"
    block_count = 0
    await call.answer("–û–∂–∏–¥–∞–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –±–∞–∑—ã...")
    last_msg: CallbackQuery.message

    for user in db._users.find():
        first_name = user["first_name"]
        last_name = user["last_name"]
        user_id = user["user_id"]
        group = user["group"]
        if last_name:
            full_name = f"{first_name} {last_name}"
        else:
            full_name = first_name

        add = (
            f'<a href="tg://user?id={user_id}">{full_name}</a>‚óº <b>–ì—Ä—É–ø–ø–∞ {group}</b>\n'
        )
        if len(text + add) <= 4096:
            text += add
        else:
            if block_count == 0:
                await call.message.edit_text(text=text)
            else:
                last_msg = await call.bot.send_message(call.message.chat.id, text)
                text = (
                    f'<a href="tg://user?id={user_id}">{first_name} {last_name}</a>'
                    f"‚óº <b>–ì—Ä—É–ø–ø–∞ {group}</b>\n"
                )

        block_count += 1

    if block_count == 0:
        await call.message.edit_reply_markup(reply_markup=kb_admin_back)
    else:
        await call.bot.edit_message_reply_markup(
            chat_id=call.message.chat.id,
            message_id=last_msg.message_id,
            reply_markup=kb_admin_back,
        )


@admin_menu_router.callback_query(F.data == "toadmin")
async def cb_toadmin(call: CallbackQuery):
    """### [`Callback`] –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é."""
    m_s = db.settings().maintenance  # maintenance_state, –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    count = db._users.count_documents({})
    maintenance_state = "üü¢ –í–∫–ª—é—á–µ–Ω—ã" if m_s else "üî¥ –í—ã–∫–ª—é—á–µ–Ω—ã"
    await call.message.edit_text(
        text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, {escape(call.from_user.first_name)}.\n"
        f"<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <u>{count}</u></b>\n"
        f"<b>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Ö.—Ä–∞–±–æ—Ç: <u>{maintenance_state}</u></b>\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π:",
        reply_markup=kb_admin,
    )


@admin_menu_router.callback_query(F.data == "toggle_maintenance")
async def cb_toggle_maintenance(call: CallbackQuery):
    """### [`Callback`] –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ç–µ—Ö—Ä–∞–±–æ—Ç."""
    # TODO: –≤—ã–Ω–µ—Å—Ç–∏ settings –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ DBWorker
    settings = db.settings()
    settings.maintenance = not settings.maintenance
    await cb_toadmin(call)
